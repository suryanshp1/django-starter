name: my-docker-project

services:
  app:
    build: .
    container_name: my-docker-container
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      - postgres
      - pgbouncer
      - redis

  postgres:
    image: postgres:17
    container_name: postgres-container
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - DATABASE = postgres
    env_file:
      - ./.env

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: pgbouncer-container
    restart: always
    ports:
      - "6432:6432"
    depends_on:
      - postgres
    env_file:
      - ./.env

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  celery_worker:
    build: .
    command: celery -A a_core worker -E -l INFO --pool=gevent -c 100
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    command: celery -A a_core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - app

  flower:
    build: .
    command: celery -A a_core flower --port=5555
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
      - celery_beat

volumes:
  postgres_data: